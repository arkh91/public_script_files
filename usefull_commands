active connection to server
netstat -tn | grep :18687
sudo apt-get install net-tools

public ip adrdress:
curl -4 icanhazip.com

save connection to filenme
netstat -tn | grep :18687 >> filename

outline custum port
sudo bash -c "$(wget -qO- https://raw.githubusercontent.com/Jigsaw-Code/outline-server/master/src/server_manager/install_scripts/install_server.sh)" install_server.sh --api-port=MANAGMENT_PORT --keys-port=ACCESS_KEY_PORT  
sudo bash -c "$(wget -qO- https://raw.githubusercontent.com/Jigsaw-Code/outline-server/master/src/server_manager/install_scripts/install_server.sh)" install_server.sh --api-port=70 --keys-port=8080
sudo bash -c "$(wget -qO- https://raw.githubusercontent.com/Jigsaw-Code/outline-server/master/src/server_manager/install_scripts/install_server.sh)" install_server.sh --api-port=70 --keys-port=8880

sudo wget https://raw.githubusercontent.com/arkh91/public_script_files/main/autoreboot && cat autoreboot >> /etc/crontab

iptables -t nat -L

Django Server Error: port is already in use:
sudo lsof -t -i tcp:8000 | xargs kill -9

https://www.youtube.com/watch?v=3NAtCKrBSpg

git clone https://github.com/arkh91/outline.git

sudo apt install python3-pip python3-venv


mkdir myDjango
python3 -m venv my_env
source my_env/bin/activate

//deactivate

pip install django
pip3 install -r requirements.txt


django-admin startproject djangoproject .
python manage.py migrate
python manage.py createsuperuser 

python manage.py runserver 13.53.38.253:80


Telegram proxy commands
Create a new Key:
sudo docker run -d -p 8888:443 --name=YASI2 --restart=always -v proxy-config:/data -e SECRET=0123456789ABCDEF0123456789ABCDEF -e LIMIT=20000000000 telegrammessenger/proxy:latest

Stop and remove a key:
sudo docker stop YASI2
sudo docker rm YASI2

Status:
sudo docker stats mtproxy

Remove docker
sudo docker pull telegrammessenger/proxy:latest

Partition info/usage
df -h /where folder is mounted
df -h /mnt/ssd100/

Output:
Filesystem      Size  Used Avail Use% Mounted on
/dev/sda1        50G   20G   28G  42% /

SSL
sudo systemctl status certbot.time
